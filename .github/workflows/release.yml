name: Build and Release APK

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build Debug APK
      run: ./gradlew assembleDebug

    - name: Build Release APK
      run: ./gradlew assembleRelease

    - name: Get release info
      id: release_info
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "release_name=Release ${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "tag_name=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          echo "release_name=${{ github.event.release.name }}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release (if triggered by tag)
      if: github.event_name == 'push'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_info.outputs.tag_name }}
        release_name: ${{ steps.release_info.outputs.release_name }}
        draft: false
        prerelease: false
        body: |
          ## GPS Android App - ${{ steps.release_info.outputs.tag_name }}

          ### APK Files
          - `app-debug.apk` - Debug version for development and testing
          - `app-release-unsigned.apk` - Release version (unsigned)

          ### Installation
          Download the appropriate APK file and install it on your Android device.

          **Note**: You may need to enable "Install from unknown sources" in your device settings.

    - name: Get upload URL
      id: get_upload_url
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then
          echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_OUTPUT
        else
          echo "upload_url=${{ github.event.release.upload_url }}" >> $GITHUB_OUTPUT
        fi

    - name: Upload Debug APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: ./app/build/outputs/apk/debug/app-debug.apk
        asset_name: gps-app-debug-${{ steps.release_info.outputs.tag_name }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: ./app/build/outputs/apk/release/app-release-unsigned.apk
        asset_name: gps-app-release-${{ steps.release_info.outputs.tag_name }}.apk
        asset_content_type: application/vnd.android.package-archive